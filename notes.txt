1. Configura la Estructura del Proyecto: Primero, necesitas crear una estructura básica del proyecto que separe el frontend y el backend. Aquí hay un ejemplo de cómo puede lucir la estructura de tu proyecto:

mi-proyecto/
├── backend/
│   ├── node_modules/
│   ├── src/
│   │   ├── index.js
│   │   ├── ... (otros archivos del backend)
│   ├── package.json
├── frontend/
│   ├── node_modules/
│   ├── public/
│   ├── src/
│   │   ├── App.js
│   │   ├── index.js
│   │   ├── ... (otros archivos del frontend)
│   ├── package.json
├── package.json

2. Configura el Backend (Node.js)

1. Navega al directorio backend:

cd mi-proyecto/backend

2. Inicializa el proyecto de Node.js:

npm init -y

3. Instala las dependencias necesarias (por ejemplo, Express):

 -- npm install express
 -- Instalar nodemon: npm i -D nodemon
 -- Instalar dotenv: npm i dotenv

4. Crea el archivo principal (index.js):

// backend/src/index.js
const express = require('express');
const app = express();
const PORT = process.env.PORT || 5000;

app.get('/api', (req, res) => {
  res.send('Hello from the backend!');
});

app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});

3. . Configura el Frontend (React)

1. Navega al directorio frontend: cd ../frontend
1.1 Elimnar la carpeta src
2. Crea una nueva aplicación de React: npx create-react-app .
3. Instala axios para hacer solicitudes HTTP al backend (opcional, pero común): npm install axios
4. Instalar react-bootstrap: npm install react-bootstrap bootstrap
5. Agregar Bootstrap en el proyecto: En el archivo src/index.js, importa el CSS de Bootstrap: 
    import 'bootstrap/dist/css/bootstrap.min.css';
6. Instalar react-router-dom para el manejo de rutas: npm install react-router-dom
7. Instalar Immer:  npm install immer use-immer
8. Instalar react-router-dom: npm install react-router-dom



4. Configura los Scripts de NPM
    1. Navega al directorio raíz del proyecto: cd ..
    2. Inicializa un nuevo package.json en el directorio raíz si aún no existe: npm init -y
    3. Instala concurrently: npm install concurrently --save-dev
    4. Configura los scripts en package.json del directorio raíz:

        {
            "name": "mi-proyecto",
            "version": "1.0.0",
            "main": "index.js",
            "license": "MIT",
            "scripts": {
                "start": "concurrently \"npm run server\" \"npm run client\"",
                "server": "cd backend && npm start",
                "client": "cd frontend && npm start"
            }
        }

    5.  Proxy en React
        Para evitar problemas de CORS, puedes configurar un proxy en el archivo package.json del frontend:
        {
        "name": "frontend",
        "version": "0.1.0",
        "private": true,
        "dependencies": {
            // tus dependencias
        },
        "scripts": {
            "start": "react-scripts start",
            // otros scripts
        },
        "proxy": "http://localhost:5000"
        }


npm install jodit-react html-react-parser --save

en backend:
    npm install mysql2
    npm install bcrypt
    npm install jsonwebtoken

en frontend:
    npm install dotenv
    agregar archivo .env
    agregar las variables:
        REACT_APP_API_URL=http://localhost:8080/api
        REACT_APP_APP_EMPRESA_ID=1


npm install cropperjs
npm install cloudinary
npm i express-fileupload (no instaar)
npm i multer
npm i sharp (no es necesario instalarlo)
https://www.npmjs.com/package/express-fileupload
ejmplo de express-fileupload: hacer una prueba.
https://github.com/richardgirges/express-fileupload/tree/master/example#basic-file-upload




--- npm config
Al reiniciar el equipo tengo que actualizar los sets de npm 
npm config set registry http://registry.npmjs.org/ 
npm config set registry https://registry.npmjs.org/
npm config set proxy http://10.100.0.100:8080  
npm config set https-proxy http://10.100.0.100:8080 

-- para eliminar el proxy actual:
npm config rm proxy
npm config rm https-proxy

CREATE DEFINER=`root`@`localhost` PROCEDURE `getProductosListing`(
	IN limite INT,
    IN pagina INT    
)
BEGIN

    SELECT COUNT(*) AS totalRegistros
    FROM productos;
    
    IF (limite > 0) THEN
    
        SELECT 	P.id_producto, P.nombre, P.descripcion, 
				IFNULL(P.id_proveedor, 0) AS id_proveedor, PR.nombre AS Proveedor,
                IFNULL(P.id_categoria, 0) AS id_categoria,
                C.nombre AS Categoria,
                P.precio, P.precio_promocion, P.costo,
                IFNULL(P.image1, 'https://fiestatijuana.mx/image-not-available.png') AS image1, 
                IFNULL(P.image2, 'https://fiestatijuana.mx/image-not-available.png') AS image2, 
                IFNULL(P.image3, 'https://fiestatijuana.mx/image-not-available.png') AS image3,
                DATE_FORMAT(IFNULL(P.fecha_actualizacion, now()), '%m/%d/%Y %H:%i') AS fecha_actualizacion,
                CASE WHEN P.activo = 1 THEN 'Si' ELSE 'NO' END AS activo,
                IFNULL(P.sku, '') AS sku
		FROM productos P
        INNER JOIN proveedores PR ON PR.id_empresa = P.id_empresa AND PR.id_proveedor = P.id_proveedor
        INNER JOIN categorias C ON C.id_empresa = P.id_empresa AND C.id_categoria = P.id_categoria
        ORDER BY P.id_empresa, P.id_proveedor
		LIMIT limite OFFSET pagina;    
    
    ELSE
    
        SELECT 	P.id_producto, P.nombre, P.descripcion, 
				IFNULL(P.id_proveedor, 0) AS id_proveedor, PR.nombre AS Proveedor,
                IFNULL(P.id_categoria, 0) AS id_categoria,
                C.nombre AS Categoria,
                P.precio, P.precio_promocion, P.costo,
                IFNULL(P.image1, 'https://fiestatijuana.mx/image-not-available.png') AS image1, 
                IFNULL(P.image2, 'https://fiestatijuana.mx/image-not-available.png') AS image2, 
                IFNULL(P.image3, 'https://fiestatijuana.mx/image-not-available.png') AS image3,
                DATE_FORMAT(IFNULL(P.fecha_actualizacion, now()), '%m/%d/%Y %H:%i') AS fecha_actualizacion,
                CASE WHEN P.activo = 1 THEN 'Si' ELSE 'NO' END AS activo,
                IFNULL(P.sku, '') AS sku
		FROM productos P
        INNER JOIN proveedores PR ON PR.id_empresa = P.id_empresa AND PR.id_proveedor = P.id_proveedor
        INNER JOIN categorias C ON C.id_empresa = P.id_empresa AND C.id_categoria = P.id_categoria
        ORDER BY P.id_empresa, P.id_proveedor;
    
    END IF;

END

CREATE DEFINER=`root`@`localhost` PROCEDURE `postProducto`(
	IN prm_id_empresa INT,
    IN prm_id_producto INT,
	IN prm_nombre varchar(200) ,
	IN prm_descripcion varchar(200),
	IN prm_id_proveedor bigint(20),
    IN prm_id_categoria bigint(20),
	IN prm_precio double, 
	IN prm_precio_promocion double,
	IN prm_costo double,
	IN prm_image1 varchar(255),
	IN prm_image2 varchar(255),
	IN prm_image3 varchar(255),
	IN prm_existencia int(11),
	IN prm_activo bit(1),
	IN prm_sku varchar(20)    
)
BEGIN

	IF @prm_id_producto = 0 THEN
		
        INSERT INTO 
			productos (nombre, descripcion, id_proveedor, id_categoria, precio,
					   precio_promocion, costo, image1, image2, image3, existencia,
                       fecha_creacion, fecha_actualizacion, activo, sku)
			VALUES (prm_nombre, prm_descripcion, prm_id_proveedor, prm_id_categoria, prm_precio,
					prm_precio_promocion, prm_costo, prm_image1, prm_image2, prm_image3,
                    prm_existencia, now(), now(), prm_activo, prm_sku);    
    ELSE
    
        UPDATE productos
			SET nombre = prm_nombre, descripcion = prm_descripcion,
				id_proveedor = prm_id_proveedor, id_categoria = prm_id_categoria,
                precio = prm_precio, precio_promocion = prm_precio_promocion,
                costo = prm_costo, 
                image1 = prm_image1, image2 = prm_image2, image3 = prm_image3,
                existencia = prm_existencia, 
                fecha_creacion = now(), feha_actualizacion = now(),
                activo = prm_activo, sku = prm_sku            
		WHERE id_empresa = prm_id_empresa AND id_producto = prm_id_producto;    
    
    END IF;

END

agregar en getProductosListing el campo: P.existencia
cambiar el tipo de dato de activo del catalago de productos a TINYINT(4)
en el procedimiento postProducto cambiar el tipo de dato del parámetro activo a TINYINT
