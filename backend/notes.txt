PORT=3000
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE='crm'
DB_USER='appusercrmadmin'
DB_PASSWORD='appusercrmadmin'
CLOUDINARY_CLOUD_NAME='ddhxa9igj'
CLOUDINARY_API_KEY='778763934991892'
CLOUDINARY_API_SECRET='bPPu6qPoKNgRwLZmRYWjLqzXBgo'


nuevas tablas:
    agenda
    agenda_estatus
    jornada_laboral

nuevo sps:
    deleteAgenda
    postAgenda
    getAgendaBuscarCita
    getAgendaDisponibilidad

nuevos cambios en tablas:
    agregue el campo mostrar_productos_verMas 

nuevos cambios en sps:
    cambie el sp getLandingPage: agregué el campo: mostrar_productos_verMas
    cambie el sp putLandingPage: agregue el cambo: mostrar_productos_verMas

Pendientes:
    Agregar en la pagina de landingPage 
        - el botón para mostar ver mas Productos (Listo)
        - links para redes sociales y mostrarlas en la página si estas traen contenido

23/02:
    agregue el componente en frontend: npm install react-calendar


cambios en DB:
    - en la tabla de clientes, quitar el Not Null en los campos: empresa, celulares y telefonos
    - cambié el sp: postAgenda para la alta del cliente


CREATE DEFINER=`root`@`localhost` PROCEDURE `postAgenda`(
	IN prm_id_empresa INT,
	IN prm_fecha DATE,
    IN intervalo VARCHAR(20),
    IN prm_id_cliente INT,
    IN prm_nombre_cliente VARCHAR(200),
    IN prm_celular VARCHAR(90)
)
BEGIN
	DECLARE separador INT;
	DECLARE _hora_inicio TIME;
    DECLARE _hora_fin TIME;
    DECLARE _dia_semana INT;
    DECLARE _id_jornada INT;
    DECLARE _id_agenda_estatus SMALLINT;
    DECLARE _id_agenda INT;
    DECLARE _id_clave_confirmacion VARCHAR(6) DEFAULT '';
    -- DECLARE _id_cliente INT;
    
    SET _dia_semana = WEEKDAY(prm_fecha);
    SET _id_agenda_estatus = 2;
    
	SELECT JL.id_jornada INTO _id_jornada
	FROM jornada_laboral JL
	WHERE JL.dia_semana = _dia_semana;  
    
    -- Buscar la posición del separador "-" para obtener la fecha y hora 
	SET separador = LOCATE('-', intervalo);    
    SET _hora_inicio = TIME(SUBSTRING(intervalo, 1, separador - 1));
	SET _hora_fin = TIME(SUBSTRING(intervalo, separador + 2));
    
    -- SELECT _hora_inicio, _hora_fin;
    
    -- Si el cliente no existe lo doy de alta
    IF NOT EXISTS(
		SELECT 1 FROM clientes C WHERE C.id_empresa = prm_id_empresa AND C.celulares = prm_celular
    ) THEN
		INSERT INTO clientes (id_empresa, nombre, celulares) VALUES (prm_id_empresa, prm_nombre_cliente, prm_celular);
        SET prm_id_cliente = LAST_INSERT_ID();
    END IF;
     
    -- Busco si no hay cita reservada
    IF NOT EXISTS(
		SELECT 1
		FROM agenda A
		WHERE A.id_empresa = prm_id_empresa AND A.fecha = prm_fecha AND A.hora_inicio = _hora_inicio AND A.hora_fin = _hora_fin
    ) THEN
		
        -- GENERO CLAVE DE CONFIRMACION
        SET _id_clave_confirmacion = fn_genera_clave_confirmacion(prm_id_empresa);
    
		INSERT INTO agenda (id_empresa, fecha, hora_inicio, hora_fin, id_cliente, id_agenda_estatus, id_jornada, clave_confirmacion) 
			VALUES (prm_id_empresa, prm_fecha, _hora_inicio, _hora_fin, prm_id_cliente, _id_agenda_estatus, _id_jornada, _id_clave_confirmacion);
		SET _id_agenda = LAST_INSERT_ID();
	END IF;
    
    SELECT _id_clave_confirmacion AS folio_confirmacion;		
	
END  

CREATE DEFINER=`root`@`localhost` PROCEDURE `putAgenda`(
	IN prm_id_empresa INT,
    IN prm_id_agenda INT,
    IN prm_intervalo VARCHAR(13),
    IN prm_id_cliente INT,
    IN prm_nombre VARCHAR(90),
    IN prm_fecha DATE,
    IN prm_celular VARCHAR(90)
)
BEGIN
	DECLARE separador INT;
	DECLARE _hora_inicio TIME;
    DECLARE _hora_fin TIME;
    DECLARE _dia_semana INT;
    DECLARE _id_jornada INT;
    DECLARE _id_agenda_estatus SMALLINT;
    DECLARE _id_clave_confirmacion VARCHAR(6) DEFAULT '';
    DECLARE _cambio_efectuado BIT DEFAULT 1;
    
    SET _dia_semana = WEEKDAY(prm_fecha);
    SET _id_agenda_estatus = 2;
    
	SELECT JL.id_jornada INTO _id_jornada
	FROM jornada_laboral JL
	WHERE JL.dia_semana = _dia_semana;  
    
    -- Buscar la posición del separador "-" para obtener la fecha y hora 
	SET separador = LOCATE('-', prm_intervalo);    
    SET _hora_inicio = TIME(SUBSTRING(prm_intervalo, 1, separador - 1));
	SET _hora_fin = TIME(SUBSTRING(prm_intervalo, separador + 2));
	
	-- ACTUALIZO EL NOMBRE DEL USUARIO SI ESTE CAMBIO
	IF EXISTS (
			SELECT 1
			FROM clientes C
			WHERE C.id_empresa = prm_id_empresa AND C.id_cliente = prm_id_cliente AND C.nombre <> prm_nombre
		)
	THEN 
		UPDATE clientes C SET C.nombre = prm_nombre
        WHERE C.id_empresa = prm_id_empresa AND C.id_cliente = prm_id_cliente;
        
        -- SET _cambio_efectuado = 1;
        
    END IF;
    
	-- GENERO NUEVA CLAVE DE CONFIRMACION
	SET _id_clave_confirmacion = fn_genera_clave_confirmacion(prm_id_empresa);    
    
    -- ACTUALIZO AGENDA
    UPDATE agenda SET 	fecha = prm_fecha, hora_inicio = _hora_inicio, hora_fin = _hora_fin, id_cliente = prm_id_cliente,
						id_agenda_estatus = _id_agenda_estatus, id_jornada = _id_jornada, clave_confirmacion = _id_clave_confirmacion
    WHERE id_empresa = prm_id_empresa AND id_agenda = prm_id_agenda;
    
    SELECT _cambio_efectuado AS cambio_efectuado;
    
END


CREATE DEFINER=`root`@`localhost` PROCEDURE `putAgendaCambiaEstatus`(
	IN prm_id_empresa INT,
    IN prm_id_agenda INT,
    IN prm_id_agenda_estatus SMALLINT
)
BEGIN

	UPDATE agenda SET id_agenda_estatus = prm_id_agenda_estatus 
    WHERE id_empresa = prm_id_empresa and id_agenda = prm_id_agenda;
    
    SELECT _cambio_efectuado AS cambio_efectuado;

END


ALTER TABLE `crm`.`roles` 
CHANGE COLUMN `id_empresa` `id_empresa` INT NOT NULL DEFAULT NULL ,
DROP PRIMARY KEY,
ADD PRIMARY KEY (`id_empresa`, `id_rol`);
;

ALTER TABLE `crm`.`roles` 
DROP PRIMARY KEY,
ADD PRIMARY KEY (`id_empresa`, `id_rol`);
;



en mariaDB no me dejó crear los indices para usuario_rol y rol_menu
ALTER TABLE `crm`.`usuario_rol` 
ADD INDEX `ix_usuarios` (`id_empresa` ASC) VISIBLE,
ADD INDEX `ix_roles` (`id_empresa` ASC, `id_rol` ASC) VISIBLE;
;

ALTER TABLE `crm`.`rol_menu` 
ADD INDEX `ix_roles` (`id_empresa` ASC, `id_rol` ASC) VISIBLE,
ADD INDEX `ix_procMenu` (`id_empresa` ASC, `id_procMenu` ASC) VISIBLE;
;


update procmenu set linkTo = '/' where id_empresa = 1 and id_procMenu = 1;
update procmenu set linkTo = 'AboutUs' where id_empresa = 1 and id_procMenu = 14;
update procmenu set linkTo = 'Products' where id_empresa = 1 and id_procMenu = 15;
update procmenu set linkTo = 'Services' where id_empresa = 1 and id_procMenu = 16;
update procmenu set linkTo = 'ContactUs' where id_empresa = 1 and id_procMenu = 17;
update procmenu set linkTo = 'Ventas/Cotizar' where id_empresa = 1 and id_procMenu = 18;
update procmenu set linkTo = 'Compras/Proveedores/ListProveedores' where id_empresa = 1 and id_procMenu = 19;
update procmenu set linkTo = 'Cartera/Agenda' where id_empresa = 1 and id_procMenu = 23;
update procmenu set linkTo = 'Inventario/Productos/ListProductos' where id_empresa = 1 and id_procMenu = 26;
update procmenu set linkTo = 'Inventario/Categorias/ListCategorias' where id_empresa = 1 and id_procMenu = 27;
update procmenu set linkTo = 'Inventario/Canvas/PedidoCanvas' where id_empresa = 1 and id_procMenu = 28;
update procmenu set linkTo = 'Admin/Perfil' where id_empresa = 1 and id_procMenu = 40;
update procmenu set linkTo = 'Admin/LandingPage' where id_empresa = 1 and id_procMenu = 49;

update procmenu set orden = 115
where id_empresa = 1 and id_procMenu = 13;

-- insert procmenu (id_empresa, id_padre, nombre, orden, activo, linkTo, icono) VALUES (1, 11, 'Ver Notificaciones', 10, 1, '', '');

insert into rol_menu (id_empresa, id_rol, id_procMenu) VALUES (1, 1, 50)

ALTER TABLE `crm`.`procmenu` 
ADD COLUMN `soloLanding` BIT(1) NULL DEFAULT 0 AFTER `icono`;

update procmenu set soloLanding = 1 where id_empresa = 1 and id_procMenu in (1, 14, 15, 16, 17, 38);

CREATE DEFINER=`root`@`localhost` PROCEDURE `getLandingPage`(
    IN prm_host VARCHAR(200)
)
BEGIN
	
	SELECT  quienes_somos,
			servicios,
            productos,
            mostrar_quienes_somos,
            mostrar_productos,
            mostrar_productos_verMas,
            mostrar_servicios,
            mostrar_contactanos,
            mostrar_sitioEnMantenimiento,
            mostrar_landingPage,
            mostrar_carritoDeCompras,
            L.id_empresa,
            L.id_landingPage
    FROM hosts H 
    INNER JOIN landingPage L ON L.id_empresa = H.id_empresa
    WHERE H.host = prm_host ;
	
	SELECT 	id_categoria, nombre, 
			IFNULL(imagen, 'https://fiestatijuana.mx/image-not-available.png') AS imagen
    FROM hosts H
    INNER JOIN categorias C ON C.id_empresa = H.id_empresa
    WHERE H.host = prm_host 
    AND EXISTS(
			SELECT id_categoria FROM productos P WHERE P.id_categoria = C.id_categoria LIMIT 1
        );	
        
	SELECT PM.id_procMenu, PM.nombre, PM.activo, PM.linkTo, PM.icono
	FROM hosts H
	INNER JOIN procmenu PM ON PM.id_empresa = H.id_empresa AND PM.soloLanding = 1 AND activo = 1
	WHERE H.host = prm_host 
	ORDER BY PM.orden;
        
    /*
	SELECT 	id_categoria, nombre, 
			IFNULL(imagen, 'https://fiestatijuana.mx/image-not-available.png') AS imagen
    FROM categorias C
    INNER JOIN hosts H ON H.host = C.host
    WHERE h.host = prm_host 
    AND EXISTS(
			SELECT id_categoria FROM productos P WHERE P.id_categoria = C.id_categoria LIMIT 1
        );
	*/

END

-- casa
update procMenu set activo = 1 where id_empresa = 1 and id_procMenu = 1;

UPDATE `crm`.`procMenu` SET `orden` = '200' WHERE (`id_empresa` = '1') and (`id_procMenu` = '38');
UPDATE `crm`.`procMenu` SET `orden` = '220' WHERE (`id_empresa` = '1') and (`id_procMenu` = '39');
UPDATE `crm`.`procMenu` SET `orden` = '210' WHERE (`id_empresa` = '1') and (`id_procMenu` = '40');

update procMenu set soloLanding = 0 where id_empresa = 1 and id_procMenu=38;

delete from rol_menu where id_empresa = 1 and id_rol = 1 and id_procMenu = 38;