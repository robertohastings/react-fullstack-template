PORT=3000
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE='crm'
DB_USER='appusercrmadmin'
DB_PASSWORD='appusercrmadmin'
CLOUDINARY_CLOUD_NAME='ddhxa9igj'
CLOUDINARY_API_KEY='778763934991892'
CLOUDINARY_API_SECRET='bPPu6qPoKNgRwLZmRYWjLqzXBgo'


nuevas tablas:
    agenda
    agenda_estatus
    jornada_laboral

nuevo sps:
    deleteAgenda
    postAgenda
    getAgendaBuscarCita
    getAgendaDisponibilidad

nuevos cambios en tablas:
    agregue el campo mostrar_productos_verMas 

nuevos cambios en sps:
    cambie el sp getLandingPage: agregué el campo: mostrar_productos_verMas
    cambie el sp putLandingPage: agregue el cambo: mostrar_productos_verMas

Pendientes:
    Agregar en la pagina de landingPage 
        - el botón para mostar ver mas Productos (Listo)
        - links para redes sociales y mostrarlas en la página si estas traen contenido

23/02:
    agregue el componente en frontend: npm install react-calendar


cambios en DB:
    - en la tabla de clientes, quitar el Not Null en los campos: empresa, celulares y telefonos
    - cambié el sp: postAgenda para la alta del cliente


CREATE DEFINER=`root`@`localhost` PROCEDURE `postAgenda`(
	IN prm_id_empresa INT,
	IN prm_fecha DATE,
    IN intervalo VARCHAR(20),
    IN prm_id_cliente INT,
    IN prm_nombre_cliente VARCHAR(200),
    IN prm_celular VARCHAR(90)
)
BEGIN
	DECLARE separador INT;
	DECLARE _hora_inicio TIME;
    DECLARE _hora_fin TIME;
    DECLARE _dia_semana INT;
    DECLARE _id_jornada INT;
    DECLARE _id_agenda_estatus SMALLINT;
    DECLARE _id_agenda INT;
    DECLARE _id_clave_confirmacion VARCHAR(6) DEFAULT '';
    -- DECLARE _id_cliente INT;
    
    SET _dia_semana = WEEKDAY(prm_fecha);
    SET _id_agenda_estatus = 2;
    
	SELECT JL.id_jornada INTO _id_jornada
	FROM jornada_laboral JL
	WHERE JL.dia_semana = _dia_semana;  
    
    -- Buscar la posición del separador "-" para obtener la fecha y hora 
	SET separador = LOCATE('-', intervalo);    
    SET _hora_inicio = TIME(SUBSTRING(intervalo, 1, separador - 1));
	SET _hora_fin = TIME(SUBSTRING(intervalo, separador + 2));
    
    -- SELECT _hora_inicio, _hora_fin;
    
    -- Si el cliente no existe lo doy de alta
    IF NOT EXISTS(
		SELECT 1 FROM clientes C WHERE C.id_empresa = prm_id_empresa AND C.celulares = prm_celular
    ) THEN
		INSERT INTO clientes (id_empresa, nombre, celulares) VALUES (prm_id_empresa, prm_nombre_cliente, prm_celular);
        SET prm_id_cliente = LAST_INSERT_ID();
    END IF;
     
    -- Busco si no hay cita reservada
    IF NOT EXISTS(
		SELECT 1
		FROM agenda A
		WHERE A.id_empresa = prm_id_empresa AND A.fecha = prm_fecha AND A.hora_inicio = _hora_inicio AND A.hora_fin = _hora_fin
    ) THEN
		
        -- GENERO CLAVE DE CONFIRMACION
        SET _id_clave_confirmacion = fn_genera_clave_confirmacion(prm_id_empresa);
    
		INSERT INTO agenda (id_empresa, fecha, hora_inicio, hora_fin, id_cliente, id_agenda_estatus, id_jornada, clave_confirmacion) 
			VALUES (prm_id_empresa, prm_fecha, _hora_inicio, _hora_fin, prm_id_cliente, _id_agenda_estatus, _id_jornada, _id_clave_confirmacion);
		SET _id_agenda = LAST_INSERT_ID();
	END IF;
    
    SELECT _id_clave_confirmacion AS folio_confirmacion;		
	
END  

CREATE DEFINER=`root`@`localhost` PROCEDURE `putAgenda`(
	IN prm_id_empresa INT,
    IN prm_id_agenda INT,
    IN prm_intervalo VARCHAR(13),
    IN prm_id_cliente INT,
    IN prm_nombre VARCHAR(90),
    IN prm_fecha DATE,
    IN prm_celular VARCHAR(90)
)
BEGIN
	DECLARE separador INT;
	DECLARE _hora_inicio TIME;
    DECLARE _hora_fin TIME;
    DECLARE _dia_semana INT;
    DECLARE _id_jornada INT;
    DECLARE _id_agenda_estatus SMALLINT;
    DECLARE _id_clave_confirmacion VARCHAR(6) DEFAULT '';
    DECLARE _cambio_efectuado BIT DEFAULT 1;
    
    SET _dia_semana = WEEKDAY(prm_fecha);
    SET _id_agenda_estatus = 2;
    
	SELECT JL.id_jornada INTO _id_jornada
	FROM jornada_laboral JL
	WHERE JL.dia_semana = _dia_semana;  
    
    -- Buscar la posición del separador "-" para obtener la fecha y hora 
	SET separador = LOCATE('-', prm_intervalo);    
    SET _hora_inicio = TIME(SUBSTRING(prm_intervalo, 1, separador - 1));
	SET _hora_fin = TIME(SUBSTRING(prm_intervalo, separador + 2));
	
	-- ACTUALIZO EL NOMBRE DEL USUARIO SI ESTE CAMBIO
	IF EXISTS (
			SELECT 1
			FROM clientes C
			WHERE C.id_empresa = prm_id_empresa AND C.id_cliente = prm_id_cliente AND C.nombre <> prm_nombre
		)
	THEN 
		UPDATE clientes C SET C.nombre = prm_nombre
        WHERE C.id_empresa = prm_id_empresa AND C.id_cliente = prm_id_cliente;
        
        -- SET _cambio_efectuado = 1;
        
    END IF;
    
	-- GENERO NUEVA CLAVE DE CONFIRMACION
	SET _id_clave_confirmacion = fn_genera_clave_confirmacion(prm_id_empresa);    
    
    -- ACTUALIZO AGENDA
    UPDATE agenda SET 	fecha = prm_fecha, hora_inicio = _hora_inicio, hora_fin = _hora_fin, id_cliente = prm_id_cliente,
						id_agenda_estatus = _id_agenda_estatus, id_jornada = _id_jornada, clave_confirmacion = _id_clave_confirmacion
    WHERE id_empresa = prm_id_empresa AND id_agenda = prm_id_agenda;
    
    SELECT _cambio_efectuado AS cambio_efectuado;
    
END


CREATE DEFINER=`root`@`localhost` PROCEDURE `putAgendaCambiaEstatus`(
	IN prm_id_empresa INT,
    IN prm_id_agenda INT,
    IN prm_id_agenda_estatus SMALLINT
)
BEGIN

	UPDATE agenda SET id_agenda_estatus = prm_id_agenda_estatus 
    WHERE id_empresa = prm_id_empresa and id_agenda = prm_id_agenda;
    
    SELECT _cambio_efectuado AS cambio_efectuado;

END


ALTER TABLE `crm`.`roles` 
CHANGE COLUMN `id_empresa` `id_empresa` INT NOT NULL DEFAULT NULL ,
DROP PRIMARY KEY,
ADD PRIMARY KEY (`id_empresa`, `id_rol`);
;

ALTER TABLE `crm`.`roles` 
DROP PRIMARY KEY,
ADD PRIMARY KEY (`id_empresa`, `id_rol`);
;



en mariaDB no me dejó crear los indices para usuario_rol y rol_menu
ALTER TABLE `crm`.`usuario_rol` 
ADD INDEX `ix_usuarios` (`id_empresa` ASC) VISIBLE,
ADD INDEX `ix_roles` (`id_empresa` ASC, `id_rol` ASC) VISIBLE;
;

ALTER TABLE `crm`.`rol_menu` 
ADD INDEX `ix_roles` (`id_empresa` ASC, `id_rol` ASC) VISIBLE,
ADD INDEX `ix_procMenu` (`id_empresa` ASC, `id_procMenu` ASC) VISIBLE;
;

-- CAMBIAR EL TAMAÑO DEL CAMPO ICONO DE procMeu
ALTER TABLE `crm`.`procmenu` 
CHANGE COLUMN `icono` `icono` VARCHAR(600) NULL DEFAULT NULL ;

use crm;
update procmenu set icono = '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bell" viewBox="0 0 16 16">
  <path d="M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2M8 1.918l-.797.161A4 4 0 0 0 4 6c0 .628-.134 2.197-.459 3.742-.16.767-.376 1.566-.663 2.258h10.244c-.287-.692-.502-1.49-.663-2.258C12.134 8.197 12 6.628 12 6a4 4 0 0 0-3.203-3.92zM14.22 12c.223.447.481.801.78 1H1c.299-.199.557-.553.78-1C2.68 10.2 3 6.88 3 6c0-2.42 1.72-4.44 4.005-4.901a1 1 0 1 1 1.99 0A5 5 0 0 1 13 6c0 .88.32 4.2 1.22 6"/>
</svg>'
where id_empresa = 1 and id_procMenu = 11;
SELECT * FROM procmenu;

update procmenu set icono = '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-circle" viewBox="0 0 16 16">
   <path d="M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0"/>
   <path fill-rule="evenodd" d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1"/>
 </svg>'
where id_empresa = 1 and id_procMenu = 12;
SELECT * FROM procmenu where id_empresa = 1 and id_procMenu = 12;

update procmenu set icono = '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-sliders" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M11.5 2a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3M9.05 3a2.5 2.5 0 0 1 4.9 0H16v1h-2.05a2.5 2.5 0 0 1-4.9 0H0V3zM4.5 7a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3M2.05 8a2.5 2.5 0 0 1 4.9 0H16v1H6.95a2.5 2.5 0 0 1-4.9 0H0V8zm9.45 4a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3m-2.45 1a2.5 2.5 0 0 1 4.9 0H16v1h-2.05a2.5 2.5 0 0 1-4.9 0H0v-1z"/>
</svg>'
where id_empresa = 1 and id_procMenu = 13;

update procmenu set linkTo = '/' where id_empresa = 1 and id_procMenu = 1;
update procmenu set linkTo = 'AboutUs' where id_empresa = 1 and id_procMenu = 14;
update procmenu set linkTo = 'Products' where id_empresa = 1 and id_procMenu = 15;
update procmenu set linkTo = 'Services' where id_empresa = 1 and id_procMenu = 16;
update procmenu set linkTo = 'ContactUs' where id_empresa = 1 and id_procMenu = 17;
update procmenu set linkTo = 'Ventas/Cotizar' where id_empresa = 1 and id_procMenu = 18;
update procmenu set linkTo = 'Compras/Proveedores/ListProveedores' where id_empresa = 1 and id_procMenu = 19;
update procmenu set linkTo = 'Cartera/Agenda' where id_empresa = 1 and id_procMenu = 23;
update procmenu set linkTo = 'Inventario/Productos/ListProductos' where id_empresa = 1 and id_procMenu = 26;
update procmenu set linkTo = 'Inventario/Categorias/ListCategorias' where id_empresa = 1 and id_procMenu = 27;
update procmenu set linkTo = 'Inventario/Canvas/PedidoCanvas' where id_empresa = 1 and id_procMenu = 28;
update procmenu set linkTo = 'Admin/Perfil' where id_empresa = 1 and id_procMenu = 40;
update procmenu set linkTo = 'Admin/LandingPage' where id_empresa = 1 and id_procMenu = 49;

update procmenu set orden = 115
where id_empresa = 1 and id_procMenu = 13;
